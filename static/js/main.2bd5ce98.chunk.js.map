{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","className","name","onClick","style","cursor","float","color","bind","Link","to","marginRight","email","phone","porpTypes","PropTypes","object","isRequired","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2bd5ce98.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n   switch (action.type) {\r\n      case 'DELETE_CONTACT':\r\n         return {\r\n            ...state,\r\n            contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n         };\r\n      case 'ADD_CONTACT':\r\n         return {\r\n            ...state,\r\n            contacts: [action.payload, ...state.contacts]\r\n         };\r\n      case 'UPDATE_CONTACT':\r\n         return {\r\n            ...state,\r\n            contacts: state.contacts.map(contact =>\r\n               contact.id === action.payload.id\r\n                  ? (contact = action.payload)\r\n                  : contact\r\n            )\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport class Provider extends Component {\r\n   state = {\r\n      contacts: [],\r\n      dispatch: action =>\r\n         this.setState(state => reducer(state, action))\r\n   };\r\n\r\n   async componentDidMount() {\r\n      const res = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n      this.setState({ contacts: res.data });\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <Context.Provider value={this.state}>\r\n            {this.props.children}\r\n         </Context.Provider>\r\n      );\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n   state = {\r\n      showContactInfo: false\r\n   };\r\n\r\n   onDeleteClick = async (id, dispatch) => {\r\n      try {\r\n         await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n         dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n      } catch (e) {\r\n         dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n      }\r\n   };\r\n\r\n   render() {\r\n      const { contact } = this.props;\r\n      const { showContactInfo } = this.state;\r\n\r\n      return (\r\n         <Consumer>\r\n            {value => {\r\n               const { dispatch } = value;\r\n               return (\r\n                  <div className=\"card card-body mb-3\">\r\n                     <h4>{contact.name}{'  '}\r\n                        <i onClick={() => this.setState({\r\n                           showContactInfo: !this.state.showContactInfo\r\n                        })}\r\n                           className=\"fas fa-sort-down\"\r\n                           style={{ cursor: 'pointer' }}\r\n                        />\r\n                        <i className=\"fas fa-times\"\r\n                           style={{\r\n                              cursor: 'pointer',\r\n                              float: 'right',\r\n                              color: 'red'\r\n                           }}\r\n                           onClick={this.onDeleteClick.bind(this, contact.id, dispatch)}\r\n                        />\r\n                        <Link to={`contact/edit/${contact.id}`}>\r\n                           <i\r\n                              className=\"fas fa-pencil-alt\"\r\n                              style={{\r\n                                 cursor: 'pointer',\r\n                                 float: 'right',\r\n                                 color: 'black',\r\n                                 marginRight: '1rem'\r\n                              }}\r\n                           />\r\n                        </Link>\r\n                     </h4>\r\n                     {showContactInfo ? (\r\n                        <ul className=\"list-group\">\r\n                           <li className=\"list-group-item\">Email: {contact.email}</li>\r\n                           <li className=\"list-group-item\">Phone: {contact.phone}</li>\r\n                        </ul>\r\n                     ) : null}\r\n\r\n                  </div>\r\n               )\r\n            }}\r\n         </Consumer>\r\n\r\n\r\n      )\r\n   }\r\n}\r\n\r\nContact.porpTypes = {\r\n   contact: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context'\r\n\r\nclass Contacts extends Component {\r\n   render() {\r\n      return (\r\n         <Consumer>\r\n            {value => {\r\n               const { contacts } = value;\r\n               return (\r\n                  <React.Fragment>\r\n                     <h1 className=\"display-4 mb-4\">\r\n                        <span className=\"text-danger\">CONTACT</span>\r\n                        LIST\r\n                     </h1>\r\n                     {contacts.map(contact => (\r\n                        <Contact\r\n                           key={contact.id}\r\n                           contact={contact}\r\n                        />\r\n                     ))}\r\n                  </React.Fragment>\r\n               )\r\n            }}\r\n         </Consumer>\r\n      )\r\n\r\n   }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n   label,\r\n   name,\r\n   value,\r\n   placeholder,\r\n   type,\r\n   onChange,\r\n   error\r\n}) => {\r\n   return (\r\n      <div className=\"form-group\">\r\n         <label htmlFor={name}>{label}</label>\r\n         <input\r\n            type={type}\r\n            name={name}\r\n            className={classnames('form-control form-control-lg', {\r\n               'is-invalid': error\r\n            })}\r\n            placeholder={placeholder}\r\n            value={value}\r\n            onChange={onChange}\r\n         />\r\n         {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n   );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n   label: PropTypes.string.isRequired,\r\n   name: PropTypes.string.isRequired,\r\n   placeholder: PropTypes.string.isRequired,\r\n   value: PropTypes.string.isRequired,\r\n   type: PropTypes.string.isRequired,\r\n   onChange: PropTypes.func.isRequired,\r\n   error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n   type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n   state = {\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n   }\r\n\r\n   onSubmit = async (dispatch, e) => {\r\n      e.preventDefault();\r\n\r\n      const { name, email, phone } = this.state;\r\n\r\n      // Check for errors\r\n      if (name === '') {\r\n         this.setState({ errors: { name: 'Name is required' } });\r\n         return;\r\n      }\r\n      if (email === '') {\r\n         this.setState({ errors: { email: 'Email is required' } });\r\n         return;\r\n      }\r\n      if (phone === '') {\r\n         this.setState({ errors: { phone: 'Phone is required' } });\r\n         return;\r\n      }\r\n\r\n      const newContact = {\r\n         name,\r\n         email,\r\n         phone\r\n      }\r\n\r\n      const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n\r\n      dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n\r\n\r\n      // Clear State\r\n      this.setState({\r\n         name: '',\r\n         email: '',\r\n         phone: '',\r\n         errors: {}\r\n      });\r\n\r\n      this.props.history.push('/');\r\n\r\n   };\r\n\r\n   onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n   render() {\r\n      const { name, email, phone, errors } = this.state;\r\n\r\n      return (\r\n         <Consumer>\r\n            {value => {\r\n               const { dispatch } = value;\r\n               return (\r\n                  <div className=\"card mb-3\">\r\n                     <div className=\"card-header\">ADD CONTACT</div>\r\n                     <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                           <TextInputGroup\r\n                              label=\"NAME\"\r\n                              name=\"name\"\r\n                              placeholder=\"Enter Name...\"\r\n                              value={name}\r\n                              onChange={this.onChange}\r\n                              error={errors.name}\r\n                           />\r\n\r\n                           <TextInputGroup\r\n                              label=\"EMAIL\"\r\n                              name=\"email\"\r\n                              type=\"email\"\r\n                              placeholder=\"Enter Email...\"\r\n                              value={email}\r\n                              onChange={this.onChange}\r\n                              error={errors.email}\r\n                           />\r\n\r\n                           <TextInputGroup\r\n                              label=\"PHONE\"\r\n                              name=\"phone\"\r\n                              placeholder=\"Enter Phone...\"\r\n                              value={phone}\r\n                              onChange={this.onChange}\r\n                              error={errors.phone}\r\n                           />\r\n\r\n                           {/* <div className=\"form-group\">\r\n                              <label htmlFor=\"name\">NAME</label>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name=\"name\"\r\n                                 className=\"form-control form-control-lg\"\r\n                                 placeholder=\"Enter Name...\"\r\n                                 value={name}\r\n                                 onChange={this.onChange}\r\n                              />\r\n                           </div> */}\r\n\r\n                           <input\r\n                              type=\"submit\"\r\n                              value=\"ADD CONTACT\"\r\n                              className=\"btn btn-light btn-block\"\r\n                           />\r\n\r\n                        </form>\r\n                     </div>\r\n                  </div>\r\n               )\r\n            }}\r\n         </Consumer>\r\n      )\r\n\r\n\r\n   }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n   state = {\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n   }\r\n\r\n   async componentDidMount() {\r\n      const { id } = this.props.match.params;\r\n      const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n      const contact = res.data;\r\n      this.setState({\r\n         name: contact.name,\r\n         email: contact.email,\r\n         phone: contact.phone\r\n      })\r\n   }\r\n\r\n   onSubmit = async (dispatch, e) => {\r\n      e.preventDefault();\r\n\r\n      const { name, email, phone } = this.state;\r\n\r\n      // Check for errors\r\n      if (name === '') {\r\n         this.setState({ errors: { name: 'Name is required' } });\r\n         return;\r\n      }\r\n      if (email === '') {\r\n         this.setState({ errors: { email: 'Email is required' } });\r\n         return;\r\n      }\r\n      if (phone === '') {\r\n         this.setState({ errors: { phone: 'Phone is required' } });\r\n         return;\r\n      }\r\n\r\n      const updContact = {\r\n         name,\r\n         email,\r\n         phone\r\n      }\r\n\r\n      const { id } = this.props.match.params;\r\n\r\n      const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n      dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n      // Clear State\r\n      this.setState({\r\n         name: '',\r\n         email: '',\r\n         phone: '',\r\n         errors: {}\r\n      });\r\n\r\n      this.props.history.push('/');\r\n\r\n   };\r\n\r\n   onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n   render() {\r\n      const { name, email, phone, errors } = this.state;\r\n\r\n      return (\r\n         <Consumer>\r\n            {value => {\r\n               const { dispatch } = value;\r\n               return (\r\n                  <div className=\"card mb-3\">\r\n                     <div className=\"card-header\">EDIT CONTACT</div>\r\n                     <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                           <TextInputGroup\r\n                              label=\"NAME\"\r\n                              name=\"name\"\r\n                              placeholder=\"Enter Name...\"\r\n                              value={name}\r\n                              onChange={this.onChange}\r\n                              error={errors.name}\r\n                           />\r\n\r\n                           <TextInputGroup\r\n                              label=\"EMAIL\"\r\n                              name=\"email\"\r\n                              type=\"email\"\r\n                              placeholder=\"Enter Email...\"\r\n                              value={email}\r\n                              onChange={this.onChange}\r\n                              error={errors.email}\r\n                           />\r\n\r\n                           <TextInputGroup\r\n                              label=\"PHONE\"\r\n                              name=\"phone\"\r\n                              placeholder=\"Enter Phone...\"\r\n                              value={phone}\r\n                              onChange={this.onChange}\r\n                              error={errors.phone}\r\n                           />\r\n\r\n                           {/* <div className=\"form-group\">\r\n                              <label htmlFor=\"name\">NAME</label>\r\n                              <input\r\n                                 type=\"text\"\r\n                                 name=\"name\"\r\n                                 className=\"form-control form-control-lg\"\r\n                                 placeholder=\"Enter Name...\"\r\n                                 value={name}\r\n                                 onChange={this.onChange}\r\n                              />\r\n                           </div> */}\r\n\r\n                           <input\r\n                              type=\"submit\"\r\n                              value=\"UPDATE CONTACT\"\r\n                              className=\"btn btn-light btn-block\"\r\n                           />\r\n\r\n                        </form>\r\n                     </div>\r\n                  </div>\r\n               )\r\n            }}\r\n         </Consumer>\r\n      )\r\n\r\n\r\n   }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Header = (props) => {\r\n   const { branding } = props;\r\n   return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n         <div className=\"container\">\r\n            <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n            <div>\r\n               <ul className=\"navbar-nav mr-auto\">\r\n\r\n                  <li className=\"nav-item\">\r\n                     <Link to=\"/\" className=\"nav-link\">\r\n                        <i className=\"fas fa-home\" />\r\n                        HOME\r\n                     </Link>\r\n                  </li>\r\n\r\n                  <li className=\"nav-item\">\r\n                     <Link to=\"/contact/add\" className=\"nav-link\">\r\n                        <i className=\"fas fa-plus\" />\r\n                        ADD\r\n                     </Link>\r\n                  </li>\r\n\r\n                  <li className=\"nav-item\">\r\n                     <Link to=\"/about\" className=\"nav-link\">\r\n                        <i className=\"fas fa-question\" />\r\n                        ABOUT\r\n                     </Link>\r\n                  </li>\r\n\r\n               </ul>\r\n            </div>\r\n         </div>\r\n      </nav>\r\n   )\r\n};\r\n\r\nHeader.defaultProps = {\r\n   branding: 'MY APP'\r\n};\r\n\r\nHeader.propTypes = {\r\n   branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n   return (\r\n      <div>\r\n         <h1 className=\"display-4\">ABOUT CONTACT MANAGER</h1>\r\n         <p className=\"lead\">Simple app to manage contacts</p>\r\n         <p className=\"text-secondary\">Version 1.0.0</p>\r\n      </div>\r\n   )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n   return (\r\n      <div>\r\n         <h1 className=\"display-4\"><span className=\"text-danger\">404</span> PAGE NOT FOUND</h1>\r\n         <p className=\"lead\">Sorry, that page does not exist</p>\r\n      </div>\r\n   )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n   state = {\r\n      title: '',\r\n      body: ''\r\n   };\r\n\r\n   componentDidMount() {\r\n      fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n         .then(response => response.json())\r\n         .then(data => this.setState({\r\n            title: data.title,\r\n            body: data.body\r\n         }))\r\n   }\r\n\r\n   render() {\r\n      const { title, body } = this.state;\r\n      return (\r\n         <div>\r\n            <h1>{title}</h1>\r\n            <p>{body}</p>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Test;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Test from './components/test/Test';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\" >\n            <Header branding=\"CONTACT MANAGER\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/About\" component={About} />\n                <Route exact path=\"/Test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}